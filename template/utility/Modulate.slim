##
##  Copyright(c) 2010-2011 Laika, developed under contract by mitchpraterLLC.
##  All rights reserved unless otherwise granted. This program or documentation
##  contains proprietary, confidential information and trade secrets of Laika
##  and/or mitchpraterLLC. Use of copyright notice does not imply publication.
##  
##  By possessing this software, you agree to the following terms and conditions.
##  You may not resell this software, but you may freely distribute it to others.
##  You may use it for whatever purposes you wish. There are no warranties of any
##  kind. You may make modifications, however any derivation may only be distributed
##  to others under the same freedoms granted to you herein, it must retain this
##  notice and agreement, and the modifications noted. We also ask that you make
##  such modifications available to Laika, mitchpraterLLC, or to the computer
##  graphics community as a whole through a public forum.
##
slim 1 extensions mprater {
  extensions laika vfx {

    set TemplatePrototype {
        templateV %Type %TypeModulate 0 {
            description {
                Modulates the range of Input values around the Center value
                by the given amount. The Modulator is a 0 to 1 ranged value.
            }

            parameter %Type Input {
                description {
                    The value to modulate.
                }
                defaultinput 1
                provider variable
                detail varying
                default %Default
            }

            parameter %Type Center {
                description {
                    The center point around which to modulate the Input values.
                }
                provider variable
                detail varying
                default %Center
            }

            parameter float Modulator {
                label {Modulator}
                description {
                    The amount to modulate the Input by.
                }
                provider variable
                detail varying
                subtype slider
                range {0 1}
                default .5
            }

            parameter float Gain {
                label {Sensitivity}
                description {
                    How much does the Modulator effect the Input?
                }
                provider variable
                detail varying
                subtype slider
                range {0 2}
                default 1
            }

            parameter %Type result {
                display hidden
                access output
            }

            RSLFunction  {
                void vfx%TypeModulate (
                    varying %Type   Input;
                    varying %Type   Center;
                    varying float   Modulator;
                    varying float   Gain;

                    output %Type    result;
                ) {
                    result = mix (Input, Input-Center, Gain*(Modulator-.5));
                }
            }
        }
    }

    #
    # Generate the various types of template.
    #
    foreach  {type name default center} {
        float  Float  0       .5
        color  Color  {{0 0 0}} {{.5 .5 .5}}
        point  Point  {{0 0 0}} {{.5 .5 .5}}
        vector Vector {{0 0 0}} {{.5 .5 .5}}
    } {
        regsub -all %Type $TemplatePrototype $type result
        regsub -all %Name $result $name result
        regsub -all %Default $result $default result
        regsub -all %Center $result $center result
        if [catch $result msg] {
            ::RAT::LogMsg ERROR $msg
        }
    }

  }
}
