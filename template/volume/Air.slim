##
##  Copyright(c) 2010 Laika, developed under contract by mitchpraterLLC.
##  All rights reserved unless otherwise granted. This program or documentation
##  contains proprietary, confidential information and trade secrets of Laika
##  and/or mitchpraterLLC. Use of copyright notice does not imply publication.
##  
##  By possessing this software, you agree to the following terms and conditions.
##  You may not resell this software, but you may freely distribute it to others.
##  You may use it for whatever purposes you wish. There are no warranties of any
##  kind. You may make modifications, however any derivation may only be distributed
##  to others under the same freedoms granted to you herein, it must retain this
##  notice and agreement, and the modifications noted. We also ask that you make
##  such modifications available to Laika, mitchpraterLLC, or to the computer
##  graphics community as a whole through a public forum.
##
slim 1 extensions mprater {
  extensions laika vfx {

    templateV volume Air 0 {
        label {Air}
        description {
            A simple distance based atmosphere.
            Tints the scene based on how far away objects are from the camera.
        }

        parameter color Color {
            label {Color}
            description {
                The color of the tint.
            }
            provider variable
            detail varying
            default {1 1 1}
        }

        parameter float Intensity {
            description {
                Color intensity scale.
            }
            provider variable
            detail varying
            subtype slider
            range {0 1}
            default 1
        }

        parameter float Type {
            label {Type}
            description {
                Determines the function used to apply the air tint color.
            }
            provider variable
            detail uniform
            subtype selector
            range {
                "Natural" 0
                "Pattern" 1
                "Smoothstep" 2
                "Linear" 3
            }
            default 0

            msghandler {
                SetValue {
                    set typeParam %obj
                    set typeValue [$typeParam GetValue]
                    set app [$typeParam GetAppearance]

                    switch $typeValue {
                        0 {
                            [$app GetProperties -name Density] SetDisplayLevel ""
                            [$app GetProperties -name MinDensity] SetDisplayLevel hidden
                            [$app GetProperties -name MaxDensity] SetDisplayLevel hidden
                            [$app GetProperties -name Pattern] SetDisplayLevel hidden
                            [$app GetProperties -name Min] SetDisplayLevel hidden
                            [$app GetProperties -name Max] SetDisplayLevel hidden
                        }
                        1 {
                            [$app GetProperties -name Density] SetDisplayLevel hidden
                            [$app GetProperties -name MinDensity] SetDisplayLevel ""
                            [$app GetProperties -name MaxDensity] SetDisplayLevel ""
                            [$app GetProperties -name Pattern] SetDisplayLevel ""
                            [$app GetProperties -name Min] SetDisplayLevel hidden
                            [$app GetProperties -name Max] SetDisplayLevel hidden
                        }
                        2 - 3 {
                            [$app GetProperties -name Density] SetDisplayLevel hidden
                            [$app GetProperties -name MinDensity] SetDisplayLevel hidden
                            [$app GetProperties -name MaxDensity] SetDisplayLevel hidden
                            [$app GetProperties -name Pattern] SetDisplayLevel hidden
                            [$app GetProperties -name Min] SetDisplayLevel ""
                            [$app GetProperties -name Max] SetDisplayLevel ""
                        }
                    }

                    $app UpdateEditor
                }
            }
        }

        parameter float Density {
            label {Density}
            description {
                Controls the rate of application of the tinting using a natural
                exponential function.
            }
            provider variable
            detail varying
            subtype slider
            range {0 1}
            default .1
        }

        parameter float MinDensity {
            display hidden
            label {Min Density}
            description {
                When Pattern is 0, use this density value.
            }
            provider variable
            detail uniform
            subtype slider
            range {0 1}
            default .1
        }

        parameter float MaxDensity {
            display hidden
            label {Max Density}
            description {
                When Pattern is 1, use this density value.
            }
            provider variable
            detail uniform
            subtype slider
            range {0 1}
            default .2
        }

        parameter float Pattern {
            display hidden
            label {Pattern}
            description {
                Directly control the Air's density with a value
                that varies between 0 and 1.
            }
            provider variable
            detail varying
            default .5
        }

        parameter float Min {
            display hidden
            label {Min Distance}
            description {
                Distance the tinting will begin.
            }
            provider variable
            detail uniform
            subtype slider
            range {0 10}
            default 0
        }

        parameter float Max {
            display hidden
            label {Max Distance}
            description {
                Distance the tinting will be complete.
            }
            provider variable
            detail uniform
            subtype slider
            range {0 10}
            default 10
        }

        parameter float UseOi {
            label {Use Oi}
            description {
                Normally, atmospheres shouldn't depend on the surface opacity.
                But, if you want the atmosphere to be influenced by it, turn this on.
            }
            provider variable
            detail uniform
            subtype switch
            default 0
        }

        RSLInclude {sl.h}
        RSLInclude {color.h}

        RSLMain {
            generate
            output "
                varying float   distance, range;
                varying float   density;

                distance = length (vtransform (\"current\", \"shader\", I));

                if (Type == 0)
                    density = 1 - exp(-distance/100*[getvar Density]);

                else if (Type == 1)
                    density = 1 - exp(-distance/100*mix([getvar MinDensity],[getvar MaxDensity],[getvar Pattern]));

                else if (Type == 2)
                    density = smoothstep (Min, Max, distance);

                else if (Type == 3)
                    density = linearstep (Min, Max, distance);

                if ([getvar UseOi] == 0)
                    Ci = mix (Ci, colorSRGBToLinear([getvar Intensity]*[getvar Color]), density);
                else
                    Ci = mix (Ci, colorSRGBToLinear([getvar Intensity]*[getvar Color])*Oi, density);
            "
        }
    }

  }
}
