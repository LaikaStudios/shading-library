##
##  Copyright(c) 2013-2014 Laika, developed under contract by mitchpraterLLC.
##  All rights reserved unless otherwise granted. This program or documentation
##  contains proprietary, confidential information and trade secrets of Laika
##  and/or mitchpraterLLC. Use of copyright notice does not imply publication.
##  
##  By possessing this software, you agree to the following terms and conditions.
##  You may not resell this software, but you may freely distribute it to others.
##  You may use it for whatever purposes you wish. There are no warranties of any
##  kind. You may make modifications, however any derivation may only be distributed
##  to others under the same freedoms granted to you herein, it must retain this
##  notice and agreement, and the modifications noted. We also ask that you make
##  such modifications available to Laika, mitchpraterLLC, or to the computer
##  graphics community as a whole through a public forum.
##
slim 1 extensions mprater {
  extensions laika vfx {

    templateV multiple meV7BumpDispSocket 0 {
        description {
            This template is used in conjunction with Bump and Disp Material Effectors
            to alter the surface shading point and response normals.
            Connect this template's Socket to the Socket parameter of a Bump or Disp template,
            and its Network outputs to the start of a point/normal manipulation network.
            The result of the network is then connected to the Network Result parameters
            of the Bump and Disp templates.
            Only a single instance of this template is needed.
        }

        parameter meV7BumpDispSocket_s Socket {
            label {Socket}
            display hidden
            access output
        }

        parameter point NetworkPoint {
            label {Network Point}
            display hidden
            access output
        }

        parameter vector NetworkNormal {
            label {Network Normal}
            display hidden
            access output
        }


        RSLInclude {effectorV7/BumpDispSocket.h}

        RSLFunction {
            void vfxmeV7BumpDispSocket (
                output meV7BumpDispSocket_s   in;
                output varying point        Pout;
                output varying vector       Nout;
            ) {
                in->Get( Pout, Nout );
            }
        }
    }

  }
}
