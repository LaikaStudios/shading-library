#
#   Laika light effector shader type setting.
#   Set to coshader or light to determine whether you want to use
#   a coshader to provide light effector functionality, or a light.
#
set coshaderType    light
set coshaderType    coshader

LogMsg INFO "    Laika Light Effector shader type = $coshaderType."

#
#   Laika attachable shader types.
#
SetPref SlimAttachableMap(lighteffector) $coshaderType

SetPref SlimAttachableMap(AOV) coshader
SetPref SlimAttachableMap(overrideLight) coshader
SetPref SlimAttachableMap(overrideSurface) coshader
SetPref SlimAttachableMap(overrideEffector) coshader
SetPref SlimAttachableMap(materialeffector) coshader
SetPref SlimAttachableMap(geolighteffector) coshader

#
#   Laika Slim Preview Settings.
#
LogMsg INFO "    Setting Laika Slim Preview Render Archives."
LogMsg INFO "    Note: Slim's default lighting is not compatible with Laika's plausible shaders,"
LogMsg INFO "    so a light rib archive must be used."
LogMsg INFO "    But, archives are not compatible with using Slim's internal renderer: an external"
LogMsg INFO "    prman renderer must be used. So also setting SetPref PreviewRender {prman %f}."

SetPref PreviewLightArchive "[file join [GetEnv RMS_SCRIPT_PATHS] rib multi_light.rib]"

SetPref PreviewEnvLight 0
SetPref PreviewSimpleLights 0

SetPref PreviewRenderer {prman %f}

#   Preview Archive objects.
SetPref PreviewObjectArchive "[file join [GetEnv RMS_SCRIPT_PATHS] rib mobiring.rib];[file join [GetEnv RMS_SCRIPT_PATHS] rib mobisegment.rib]"

#
#   Laika shader compiler settings.
#
if {$coshaderType == "coshader"} {
    set coshaderDefine COSHADER_COSHADERS
} else {
    set coshaderDefine LIGHT_COSHADERS
}

SetPref ShaderCompiler [list [file join [GetEnv RMANTREE] bin shader] \
            -I[file join [GetEnv RMS_SCRIPT_PATHS] include] \
            -I[file join [GetEnv RMS_SCRIPT_PATHS] template] \
            -I[file join [GetEnv RMSTREE] lib shaders] \
            -I[file join [GetEnv RMSTREE] lib slim include] \
            -I[file join [GetEnv RMSTREE] lib slim pxCoreV1] \
            -I[file join [GetEnv RMSTREE] lib slim pxslInterfacesV1] \
            -I[file join [GetEnv RMSTREE] lib rfm rsl] \
            -C -DRENDER_LINEAR -D$coshaderDefine %f]

#
#   Extra Slim node colors.
#
SetPref NodeColors {
    name    { None  Red     Yellow  Orange  Green   Violet  Blue    Black   SkyBlue DarkGreen Fuchsia Pink    Purple  Brown   Tan     Grey    Peach }
	normal  { ""    #b03060 #FFFF00 #cd853f #8fbc8f #9370db #3a5fcd #000000 #00BFFF #228B22   #FF00FF #FFC0CB #800080 #A0522D #D2B48C #808080 #FFB6C1 }
    selected { ""   #db7093 #FFFF00 #f4a460 #3cb371 #8a2be2 #0000cd #000000 #00BFFF #228B22   #FF00FF #FFC0CB #800080 #A0522D #D2B48C #808080 #FFB6C1 }
}
